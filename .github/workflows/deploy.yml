name: Deploy jars

on:
  release:
    types: [created]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    env:
      VERSION: ${{ github.event_name == 'release' && github.event.action == 'created' && github.ref_name || 'snapshot' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Import GPG Key
        if: github.event_name != 'pull_request'
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "default-key $(gpg --list-keys --with-colons | grep pub | cut -d':' -f5)" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

      - name: Generate settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                <servers>
                  <server>
                    <id>github</id>
                    <username>${{ github.actor }}</username>
                    <password>${{ secrets.GITHUB_TOKEN }}</password>
                  </server>
                  ${{ secrets.MAVEN_SETTINGS_SERVER_CENTRAL }}
                </servers>
              </settings>" > ~/.m2/settings.xml

      - name: Download dependencies
        run: |
          mvn -B org.apache.maven.plugins:maven-dependency-plugin:3.8.1:go-offline de.qaware.maven:go-offline-maven-plugin:1.2.8:resolve-dependencies -Pci

      - name: Update version
        if: github.event_name == 'release' && github.event.action == 'created'
        run: |
          mvn -B versions:set -DnewVersion=${{ env.VERSION }}

      - name: Run Maven Build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            mvn -B clean deploy -Pci,release
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            mvn -B clean deploy -Pci
          else
            mvn -B clean install -Pci -Dgpg.skip=true
          fi
